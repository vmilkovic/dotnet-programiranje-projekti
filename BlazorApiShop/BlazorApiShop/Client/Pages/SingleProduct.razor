@page "/product"
@page "/product/{id:int}"
@inject IProductService ProductService
@inject ICategoryService CategoryService

@if (Id == null)
{
    <PageTitle>Create a new Product</PageTitle>
    <h3>Create a new Product</h3>
}
else
{
    <PageTitle>Edit @product.Name</PageTitle>
    <h3>Edit @product.Name</h3>
}

<EditForm Model="product" OnSubmit="HandleSubmit">
    <div>
        <label for="name">Name</label>
        <InputText id="name" @bind-Value="product.Name" class="from-control"></InputText>
    </div>
    <div>
        <label for="description">Description</label>
        <InputText id="description" @bind-Value="product.Description" class="from-control"></InputText>
    </div>
    <div>
        <label for="price">Price</label>
        <InputNumber id="price" @bind-Value="product.Price" class="from-control"></InputNumber>
    </div>
    <div>
        <label for="quantity">Quantity</label>
        <InputNumber id="quantity" @bind-Value="product.Quantity" class="from-control"></InputNumber>
    </div>
    <div>
        <label for="instock">In Stock</label>
        <InputCheckbox id="instock" @bind-Value="product.InStock" class="from-control"></InputCheckbox>
    </div>
    <div>
        <label>Category</label><br />
        <InputSelect @bind-Value="product.CategoryId" class="form-select">
            @foreach (var category in CategoryService.Categories)
            {
                <option value="@category.Id">@category.Name</option>
            }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteProduct">Delete Product</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }
    Product product = new Product{ Category = new Category() };

    string btnText = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save product" : "Update product";
        await CategoryService.GetCategories();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            product.Category = ProductService.Categories[0];
            product.CategoryId = product.Category.Id;
        }
        else
        {
            product = await ProductService.GetProductById((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await ProductService.CreateProduct(product);
        }
        else
        {
            await ProductService.UpdateProduct(product);
        }
    }

    async Task DeleteProduct()
    {  
       await ProductService.DeleteProduct(product.Id);
    }
}